import * as z from 'zod';

export const slotMachineSchema = z.object({
  table_id: z.string().uuid(),
  tblidx: z.coerce.number().min(0, 'Must be a positive number').max(9999999999, 'Cannot exceed 10 digits').nullable(),
  dwname: z.string().nullable(),
  wsznametext: z.string().nullable(),
  szfile_name: z.string().nullable(),
  bycoin: z.coerce.number().min(0, 'Must be a positive number').nullable(),
  bonoff: z.coerce.number().min(0, 'Must be a positive number').nullable(),
  bytype: z.coerce.number().min(0, 'Must be a positive number').nullable(),
  wfirstwincoin: z.coerce.number().min(0, 'Must be a positive number').nullable(),
  aitemtblidx_0: z.coerce.number().min(0, 'Must be a positive number').nullable(),
  bystack_0: z.coerce.number().min(0, 'Must be a positive number').nullable(),
  wquantity_0: z.coerce.number().min(0, 'Must be a positive number').nullable(),
  aitemtblidx_1: z.coerce.number().min(0, 'Must be a positive number').nullable(),
  bystack_1: z.coerce.number().min(0, 'Must be a positive number').nullable(),
  wquantity_1: z.coerce.number().min(0, 'Must be a positive number').nullable(),
  aitemtblidx_2: z.coerce.number().min(0, 'Must be a positive number').nullable(),
  bystack_2: z.coerce.number().min(0, 'Must be a positive number').nullable(),
  wquantity_2: z.coerce.number().min(0, 'Must be a positive number').nullable(),
  aitemtblidx_3: z.coerce.number().min(0, 'Must be a positive number').nullable(),
  bystack_3: z.coerce.number().min(0, 'Must be a positive number').nullable(),
  wquantity_3: z.coerce.number().min(0, 'Must be a positive number').nullable(),
  aitemtblidx_4: z.coerce.number().min(0, 'Must be a positive number').nullable(),
  bystack_4: z.coerce.number().min(0, 'Must be a positive number').nullable(),
  wquantity_4: z.coerce.number().min(0, 'Must be a positive number').nullable(),
  aitemtblidx_5: z.coerce.number().min(0, 'Must be a positive number').nullable(),
  bystack_5: z.coerce.number().min(0, 'Must be a positive number').nullable(),
  wquantity_5: z.coerce.number().min(0, 'Must be a positive number').nullable(),
  aitemtblidx_6: z.coerce.number().min(0, 'Must be a positive number').nullable(),
  bystack_6: z.coerce.number().min(0, 'Must be a positive number').nullable(),
  wquantity_6: z.coerce.number().min(0, 'Must be a positive number').nullable(),
  aitemtblidx_7: z.coerce.number().min(0, 'Must be a positive number').nullable(),
  bystack_7: z.coerce.number().min(0, 'Must be a positive number').nullable(),
  wquantity_7: z.coerce.number().min(0, 'Must be a positive number').nullable(),
  aitemtblidx_8: z.coerce.number().min(0, 'Must be a positive number').nullable(),
  bystack_8: z.coerce.number().min(0, 'Must be a positive number').nullable(),
  wquantity_8: z.coerce.number().min(0, 'Must be a positive number').nullable(),
  aitemtblidx_9: z.coerce.number().min(0, 'Must be a positive number').nullable(),
  bystack_9: z.coerce.number().min(0, 'Must be a positive number').nullable(),
  wquantity_9: z.coerce.number().min(0, 'Must be a positive number').nullable(),
}); 