import { z } from "zod";

// Define the schema for the mob table
export const mobSchema = z.object({
  table_id: z.string().uuid().optional(),
  created_at: z.string().optional(),
  updated_at: z.string().optional(),
  tblidx: z.number().optional(),
  bvalidity_able: z.boolean().optional(),
  name: z.string().optional(),
  wsznametext: z.string().optional(),
  szmodel: z.string().optional(),
  bylevel: z.number().optional(),
  bygrade: z.number().optional(),
  dwai_bit_flag: z.number().optional(),
  wlp_regeneration: z.number().optional(),
  wep_regeneration: z.number().optional(),
  byattack_animation_quantity: z.number().optional(),
  bybattle_attribute: z.number().optional(),
  wbasic_physical_offence: z.number().optional(),
  wbasic_energy_offence: z.number().optional(),
  fwalk_speed_origin: z.number().optional(),
  fwalk_speed: z.number().optional(),
  frun_speed_origin: z.number().optional(),
  frun_speed: z.number().optional(),
  fradius_x: z.number().optional(),
  fradius_z: z.number().optional(),
  wsight_range: z.number().optional(),
  wscan_range: z.number().optional(),
  byvisible_sight_range: z.number().optional(),
  szcamera_bone_name: z.string().optional(),
  wattackcooltime: z.number().optional(),
  ffly_height: z.number().optional(),
  sznametext: z.string().optional(),
  bspawn_animation: z.boolean().optional(),
  dwdialoggroup: z.number().optional(),
  szillust: z.string().optional(),
  dwallianceidx: z.number().optional(),
  waggromaxcount: z.number().optional(),
  dwnpcattributeflag: z.number().optional(),
  wstomachachedefence: z.number().optional(),
  wpoisondefence: z.number().optional(),
  wbleeddefence: z.number().optional(),
  wburndefence: z.number().optional(),
  dwbasic_lp: z.number().optional(),
  wbasic_ep: z.number().optional(),
  wbasic_physical_defence: z.number().optional(),
  wbasic_energy_defence: z.number().optional(),
  wbasicstr: z.number().optional(),
  wbasiccon: z.number().optional(),
  wbasicfoc: z.number().optional(),
  wbasicdex: z.number().optional(),
  wbasicsol: z.number().optional(),
  wbasiceng: z.number().optional(),
  fscale: z.number().optional(),
  wattack_speed_rate: z.number().optional(),
  byattack_type: z.number().optional(),
  fattack_range: z.number().optional(),
  wattack_rate: z.number().optional(),
  wdodge_rate: z.number().optional(),
  wblock_rate: z.number().optional(),
  wcurse_success_rate: z.number().optional(),
  wcurse_tolerance_rate: z.number().optional(),
  fradius: z.number().optional(),
  wbasic_aggro_point: z.number().optional(),
  dwmobgroup: z.number().optional(),
  wmob_kind: z.number().optional(),
  dwdrop_zenny: z.number().optional(),
  fdrop_zenny_rate: z.number().optional(),
  dwexp: z.number().optional(),
  bymob_type: z.number().optional(),
  drop_item_tblidx: z.number().optional(),
  bsize: z.boolean().optional(),
  wtmqpoint: z.number().optional(),
  dropquesttblidx: z.number().optional(),
  idxbigbag1: z.number().optional(),
  bydroprate1: z.number().optional(),
  bytrycount1: z.number().optional(),
  idxbigbag2: z.number().optional(),
  bydroprate2: z.number().optional(),
  bytrycount2: z.number().optional(),
  idxbigbag3: z.number().optional(),
  bydroprate3: z.number().optional(),
  bytrycount3: z.number().optional(),
  dwunknown: z.number().optional(),
  byunknown: z.number().optional(),
  byunknown2: z.number().optional(),
  bshow_name: z.boolean().optional(),
  wsightangle: z.number().optional(),
  dwimmunity_bit_flag: z.number().optional(),
  bisdragonballdrop: z.boolean().optional(),
  wmonsterclass: z.number().optional(),
  wuserace: z.number().optional(),
  frewardexprate: z.number().optional(),
  frewardzennyrate: z.number().optional(),
  dwformulaoffset: z.number().optional(),
  fsettingrate_lp: z.number().optional(),
  fsettingrate_lpregen: z.number().optional(),
  fsettingrate_phyoffence: z.number().optional(),
  fsettingrate_engoffence: z.number().optional(),
  fsettingrate_phydefence: z.number().optional(),
  fsettingrate_engdefence: z.number().optional(),
  fsettingrate_attackrate: z.number().optional(),
  fsettingrate_dodgerate: z.number().optional(),
  fsettingphyoffencerate: z.number().optional(),
  fsettingengoffencerate: z.number().optional(),
  fsettingrate_defence_role: z.number().optional(),
  wuse_skill_time_0: z.number().optional(),
  use_skill_tblidx_0: z.number().optional(),
  byuse_skill_basis_0: z.number().optional(),
  wuse_skill_lp_0: z.number().optional(),
  wuse_skill_time_1: z.number().optional(),
  use_skill_tblidx_1: z.number().optional(),
  byuse_skill_basis_1: z.number().optional(),
  wuse_skill_lp_1: z.number().optional(),
  wuse_skill_time_2: z.number().optional(),
  use_skill_tblidx_2: z.number().optional(),
  byuse_skill_basis_2: z.number().optional(),
  wuse_skill_lp_2: z.number().optional(),
  wuse_skill_time_3: z.number().optional(),
  use_skill_tblidx_3: z.number().optional(),
  byuse_skill_basis_3: z.number().optional(),
  wuse_skill_lp_3: z.number().optional(),
  wuse_skill_time_4: z.number().optional(),
  use_skill_tblidx_4: z.number().optional(),
  byuse_skill_basis_4: z.number().optional(),
  wuse_skill_lp_4: z.number().optional(),
  wuse_skill_time_5: z.number().optional(),
  use_skill_tblidx_5: z.number().optional(),
  byuse_skill_basis_5: z.number().optional(),
  wuse_skill_lp_5: z.number().optional(),
  wuse_skill_time_6: z.number().optional(),
  use_skill_tblidx_6: z.number().optional(),
  byuse_skill_basis_6: z.number().optional(),
  wuse_skill_lp_6: z.number().optional(),
}); 